{"version":3,"sources":["components/error-indicator/image/countdown.png","components/common-components/row/row.tsx","components/common-components/row/index.js","components/logo/index.js","components/logo/logo.tsx","components/search-button-magnifier/index.js","components/search-button-magnifier/search-button-magnifier.tsx","components/movie-form-adding-button/movie-form-adding-button.tsx","components/header/index.js","components/header/header.tsx","components/common-components/title/index.js","components/common-components/title/title.tsx","actions/action-search-status.ts","constants/constants.ts","actions/action-search-value.ts","components/input-text/index.js","components/input-text/input-text.tsx","components/button-big/index.js","components/button-big/button-big.tsx","components/search-field/index.js","components/search-field/search-field.tsx","components/common-components/switch/index.js","components/common-components/switch/switch.tsx","components/search/index.js","components/search/search.tsx","components/movie-poster/index.js","components/movie-poster/movie-poster.tsx","components/movie-page/movie-page-vote.tsx","components/movie-page/movie-page-tagline.tsx","components/movie-page/movie-page-date.tsx","components/movie-page/movie-page-rutime.tsx","components/movie-page/movie-page-overview.tsx","components/movie-page/index.js","components/movie-page/movie-page.tsx","components/common-components/notification-label/notification-label.tsx","components/common-components/notification-label/index.js","components/error-message/index.js","components/error-message/error-message.tsx","components/loader/index.js","components/loader/loader.tsx","services/movies-api/index.js","services/movies-api/movies-api.ts","services/movies-service/index.js","services/movies-service/movies-service.ts","components/hoc-components/with-data/index.js","components/hoc-components/with-data/with-data.tsx","components/hoc-components/compose/index.js","components/hoc-components/compose/compose.ts","components/movie-page-controller/movie-page-controller.tsx","components/movie-page-controller/index.js","actions/action-movies-data-update.ts","components/movie-form-adding/index.js","components/movie-form-adding/movie-form-adding.tsx","components/movie-form-adding-controller/movie-form-adding-controller.tsx","components/movie-form-adding-controller/index.js","components/top-part/index.js","components/top-part/top-part.tsx","actions/action-sort-status.ts","components/movies-counter/index.js","components/movies-counter/movies-counter.tsx","components/control-panel/index.js","components/control-panel/control-panel.tsx","actions/action-movies-counter.ts","actions/action-movies-data.ts","actions/action-movies-data-loading-error.ts","actions/action-movies-services.ts","actions/action-movies-data-clear.ts","components/common-components/list/index.js","components/common-components/list/list.tsx","components/movie-card/movie-card-release-date.tsx","components/movie-card/movie-card-genres.tsx","components/movie-card/movie-card-rating.tsx","components/error-indicator/index.js","components/error-indicator/error-indicator.tsx","services/error-boundary/index.js","services/error-boundary/error-boundary.tsx","components/movie-card/index.js","components/movie-card/movie-card.tsx","components/movie-cards/index.js","components/movie-cards/movie-cards.tsx","components/no-found-message/index.js","components/no-found-message/no-found-message.tsx","components/hoc-components/with-search/with-search.tsx","components/hoc-components/with-search/index.js","components/hoc-components/with-sort/with-sort.tsx","components/hoc-components/with-sort/index.js","components/movie-cards-controller/movie-cards-controller.tsx","components/movie-cards-controller/index.js","components/movies/index.js","components/movies/movies.tsx","components/footer/index.js","components/footer/footer.tsx","components/app/index.js","components/app/app.tsx","reducers/reducer.ts","store/store.ts","index.tsx"],"names":["module","exports","Row","children","className","styleComponent","items","React","Children","map","item","index","cloneElement","key","props","defaultProps","Logo","SearchButtonMagnifier","changeTopPartStatus","onClick","width","height","viewBox","fill","xmlns","fillRule","d","MovieFormAddingButton","fill-rule","Header","to","Title","renderItem","actionSearchStatus","status","type","actionSearchValue","value","InputText","forwardRef","ref","valuesTransmitter","onChange","evt","target","ButtonBig","name","clickHandler","SearchField","changeSearchValue","useState","label","setLabel","inputField","useRef","useEffect","current","focus","preventDefault","Switch","active","setActive","title","markOfButtons","changeOfActiveButton","transferOfActiveButtonValue","buttons","style","toLowerCase","namesOfButtons","Search","connect","state","searchStatus","valuesOfSearchSwitch","dispatch","changeSearchStatus","bindActionCreators","MoviePoster","src","loaded","setLoaded","display","alt","onLoad","MoviePageVote","vote","MoviePageTagline","tagline","MoviePageDate","date","slice","MoviePageRuntime","runtime","MoviePageOverview","overview","MoviePage","data","poster_path","vote_average","release_date","NotificationMessage","styled","span","NotificationLabel","message","ErrorMessage","Loader","petals","Array","from","length","MoviesApi","_apiBase","getMoviesData","url","a","fetch","response","ok","Error","json","getMovies","limit","getSpecificMovie","id","MoviesService","getSearchBy","category","filter","movieData","_getFormattedString","searchedSubstring","indexOf","getSortBy","parameter","sort","b","firstParameter","_getFormattedNumber","saveInLocalStorage","currentData","oldData","localStorage","JSON","parse","Date","now","newData","stringify","getFromLocalStorage","result","getSpecificMovieFromLocalStorage","currentId","Number","parseInt","then","find","sortingParameter","match","join","trim","withData","getData","getProperty","Wrapped","setData","updateDataStatus","setUpdateDataStatus","error","setError","getNewData","property","catch","addNewData","checkingData","checkingForAbsence","Boolean","checkingForEmptiness","Object","keys","checkingForChanges","checksData","isArray","compose","funcs","comp","reduceRight","prevResult","f","MoviePageController","page","loader","errorMessage","Fragment","bind","this","PureComponent","actionMoviesDataUpdate","MovieFormAdding","valuesTransmitters","valueSender","inputErrorTitle","includes","inputErrorPosterPath","inputErrorReleaseDate","inputErrorGenres","genres","dataTransmitter","MovieFormAddingController","changeStatusDataUpdate","checksTitleValue","checksPosterPathValue","checksGenresValue","checksReleaseDateValue","checksValues","values","reduce","acc","check","push","changeMethods","TopPart","path","render","params","actionSortStatus","MoviesCounter","counter","moviesCounter","ControlPanel","sortStatus","valuesOfSortSwitch","changeSortStatus","actionMoviesCounter","actionMoviesData","actionMoviesDataLoadingError","actionMoviesServices","getState","moviesData","actionMoviesDataClear","List","child","StyledMovieCardReleaseDate","MovieCardReleaseDate","StyledMovieCardGenres","MovieCardGenres","labels","StyledMovieCardRating","MovieCardRating","rating","ErrorIndicator","countdown","ErrorBoundary","hasError","Component","MovieCard","withRouter","history","MoviesCards","moviesCards","el","getMovieCards","NoFoundMessage","withSearch","searchResultForMoviesData","setSearchResultForMoviesData","searchValue","doSearch","withSort","sortData","setSortData","setSortStatus","doSort","MovieCardsController","prevProps","clearMoviesData","transferNumberOfMovies","cards","noFoundMessage","moviesDataLoadingError","moviesDataUpdate","Movies","Footer","App","initialState","store","reducer","action","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.53a1c235.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/countdown.71c4a616.png\";","import React from 'react';\r\nimport { RowPropsType } from '../../../types/types';\r\n\r\nimport './row.scss';\r\n\r\nconst Row: React.FC<RowPropsType> = ({children, className}): React.ReactElement => {\r\n  const styleComponent = `component-row ${className}`;\r\n  const items =  React.Children.map(children, (item: React.ReactElement, index: number) => {\r\n    return React.cloneElement(\r\n      item,\r\n      {\r\n        key: index,\r\n        className: `${item.props.className} component-row__item`\r\n      }\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div className={styleComponent}>\r\n      {items}\r\n    </div>\r\n  );\r\n};\r\n\r\nRow.defaultProps = {\r\n  className: ''\r\n};\r\n\r\nexport default Row;","import Row from './row';\r\n\r\nexport default Row;","import Logo from './logo';\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nimport './logo.scss'\r\n\r\nconst Logo: React.FC = (): React.ReactElement => {\r\n  return (\r\n    <span className='logo'>\r\n      <b>netflix</b>\r\n      roulette\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Logo;","import SearchButtonMagnifier from './search-button-magnifier';\r\n\r\nexport default SearchButtonMagnifier;","import React from 'react';\r\n\r\nimport './search-button-magnifier.scss';\r\n\r\nconst SearchButtonMagnifier:\r\n  React.FC<{changeTopPartStatus?: (value: string) => void}> = ({changeTopPartStatus}): React.ReactElement<{}> => {\r\n  const changeMovieStatus = (): void | null => changeTopPartStatus ? changeTopPartStatus('search') : null;\r\n\r\n  return (\r\n    <button className='btn search-button-magnifier' onClick={changeMovieStatus}>\r\n      <svg width=\"2rem\" height=\"2rem\" viewBox=\"0 0 16 16\" className=\"bi bi-search\" fill=\"inherit\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path key={'100'} fillRule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"/>\r\n        <path key={'101'} fillRule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"/>\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SearchButtonMagnifier;","import React from 'react';\r\n\r\nimport './movie-form-adding-button.scss';\r\n\r\nconst MovieFormAddingButton:\r\n  React.FC<{changeTopPartStatus?: (value: string) => void}> = ({changeTopPartStatus}): React.ReactElement<{}> => {\r\n  const changeMovieStatus = (): void | null => changeTopPartStatus ? changeTopPartStatus('adding') : null;\r\n\r\n  return (\r\n    <button className='btn movie-form-adding-button' onClick={changeMovieStatus}>\r\n      <svg width=\"2rem\" height=\"2rem\" viewBox=\"0 0 16 16\"  fill=\"inherit\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n        <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MovieFormAddingButton;","import Header from './header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Row from '../common-components/row';\r\nimport Logo from '../logo';\r\nimport SearchButtonMagnifier from '../search-button-magnifier';\r\nimport MovieFormAddingButton from '../movie-form-adding-button/movie-form-adding-button';\r\n\r\nimport './header.scss';\r\n\r\nconst Header: React.FC  = (): React.ReactElement => {\r\n  return (\r\n    <Row className={'space align-center header'}>\r\n      <Link to='/'>\r\n        <Logo/>\r\n      </Link>\r\n      <div>\r\n        <Link to='/search/'>\r\n          <SearchButtonMagnifier/>\r\n        </Link>\r\n        <Link to='/adding/'>\r\n          <MovieFormAddingButton/>\r\n        </Link>\r\n      </div>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Header;","import Title from './title';\r\n\r\nexport default Title;","import React from 'react';\r\nimport { TitlePropsType } from '../../../types/types';\r\n\r\nimport './title.scss';\r\n\r\n\r\nconst Title: React.FC<TitlePropsType> = ({renderItem, children}): React.ReactElement => {\r\n  const element = renderItem(children);\r\n\r\n  return (\r\n    element\r\n  );\r\n};\r\n\r\nexport default Title;","import { SEARCH_STATUS } from '../constants/constants';\r\nimport { IActionSearchStatus } from '../interfaces/interfaces';\r\n\r\nconst actionSearchStatus = (status: string): IActionSearchStatus => ({\r\n  type: SEARCH_STATUS,\r\n  status: status,\r\n});\r\n\r\nexport default actionSearchStatus;","// URL\r\nexport const API_BASE = 'https://reactjs-cdp.herokuapp.com';\r\n\r\n// Actions\r\nexport const MOVIES_COUNTER = 'MOVIES_COUNTER';\r\nexport const MOVIES_DATA = 'MOVIES_DATA';\r\nexport const MOVIES_DATA_CLEAR = 'MOVIES_DATA_CLEAR';\r\nexport const MOVIES_DATA_LOADING_ERROR = 'MOVIES_DATA_LOADING_ERROR';\r\nexport const MOVIES_DATA_UPDATE = 'MOVIES_DATA_UPDATE';\r\nexport const SEARCH_STATUS = 'SEARCH_STATUS';\r\nexport const SEARCH_VALUE = 'SEARCH_VALUE';\r\nexport const SORT_STATUS = 'SORT_STATUS';","import { SEARCH_VALUE } from '../constants/constants';\r\nimport { IActionSearchValue } from '../interfaces/interfaces';\r\n\r\nconst actionSearchValue = (value: string): IActionSearchValue => ({\r\n  type: SEARCH_VALUE,\r\n  value: value,\r\n});\r\n\r\nexport default actionSearchValue;","import InputText from './input-text';\r\n\r\nexport default InputText;","import React from 'react';\r\nimport {IInputTextProps} from '../../interfaces/interfaces';\r\n\r\nimport './input-text.scss';\r\n\r\n\r\nconst InputText =\r\n  React.forwardRef<HTMLInputElement, IInputTextProps>((\r\n    {value, valuesTransmitter, className}, ref): React.ReactElement => {\r\n  const changeValue = (evt: React.SyntheticEvent): void => {\r\n    const target = evt.target as HTMLInputElement;\r\n    valuesTransmitter(target.value)\r\n  };\r\n\r\n  return <input\r\n            ref={ref}\r\n            type=\"text\"\r\n            className={`${className} component-input`}\r\n            onChange={changeValue}\r\n            value={value}/>\r\n});\r\n\r\nexport default InputText;","import ButtonBig from './button-big';\r\n\r\nexport default ButtonBig;","import React from 'react';\r\nimport { ButtonBigPropsType } from '../../types/types';\r\n\r\nimport './button-big.scss';\r\n\r\nconst ButtonBig: React.FC<ButtonBigPropsType> = ({name, className, clickHandler}): React.ReactElement  => {\r\n  return <button\r\n          className={`${className} btn btn-danger component-button-big`}\r\n          onClick={clickHandler}>\r\n          {name}\r\n        </button>\r\n};\r\n\r\nexport default ButtonBig;","import SearchField from './search-field';\r\n\r\nexport default SearchField;","import React, { useState, useEffect, useRef, Ref, SyntheticEvent } from 'react';\r\nimport { SearchFieldPropsType } from '../../types/types';\r\n\r\nimport Row from '../common-components/row';\r\nimport InputText from '../input-text';\r\nimport ButtonBig from '../button-big';\r\n\r\nimport './search-field.scss';\r\n\r\nconst SearchField: React.FC<SearchFieldPropsType> = ({changeSearchValue}): React.ReactElement => {\r\n  const [label, setLabel] = useState<string>('');\r\n  const inputField = useRef<HTMLInputElement>(null);\r\n\r\n  const focusInputField = (): void =>  {\r\n    if (inputField.current) {\r\n      inputField.current.focus()\r\n    }\r\n  };\r\n\r\n  const changeInputValue = (value: string): void => setLabel(value);\r\n\r\n  const sendInputValue = (evt: SyntheticEvent): void => {\r\n    evt.preventDefault();\r\n\r\n    changeSearchValue(label);\r\n    setLabel('');\r\n  };\r\n\r\n  useEffect(() => {focusInputField()}, []);\r\n\r\n  return (\r\n    <Row className={'fix'}>\r\n      <InputText\r\n        ref={inputField}\r\n        value={label}\r\n        valuesTransmitter={changeInputValue}\r\n        className={'col-8'}/>\r\n      <ButtonBig\r\n        name={'Search'}\r\n        clickHandler={sendInputValue}/>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SearchField;\r\n","import Switch from './switch';\r\n\r\nexport default Switch;","import React, {useState, useEffect} from 'react';\r\nimport { SwitchPropsType } from '../../../types/types';\r\n\r\nimport './switch.scss';\r\n\r\nconst Switch: React.FC<SwitchPropsType> = (props): React.ReactElement => {\r\n  const [active, setActive] = useState<string>(props.active);\r\n  const [title] = useState<string>(props.title);\r\n  const [markOfButtons] = useState<Array<string>>(props.markOfButtons);\r\n\r\n  const changeOfActiveButton = (evt: React.SyntheticEvent): void => {\r\n    const target = evt.target as HTMLInputElement;\r\n    props.transferOfActiveButtonValue(target.name);\r\n  };\r\n  const getButtons = (): Array<React.ReactElement> => {\r\n    const styleActiveButton = 'btn btn-danger switch__button';\r\n    const styleInactiveButton = 'btn btn-secondary switch__button';\r\n\r\n    return markOfButtons.map( (name: string, index: number) => {\r\n      const style: string = name.toLowerCase() === active.toLowerCase() ? styleActiveButton : styleInactiveButton;\r\n      const label: string = props.namesOfButtons[index];\r\n\r\n      return (\r\n        <button\r\n          type='button'\r\n          className={style}\r\n          key={name.toLowerCase()}\r\n          name={name.toLowerCase()}\r\n          onClick={changeOfActiveButton}>\r\n            {label}\r\n        </button>\r\n      );\r\n    });\r\n  };\r\n\r\n  const buttons = getButtons();\r\n\r\n  useEffect(() => {setActive(props.active)}, [props.active]);\r\n\r\n  return (\r\n    <div className='d-flex align-items-center switch'>\r\n      <span className='mr-3 switch__title'>{title}</span>\r\n      <div className=\"btn-group\">\r\n        {buttons}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Switch;","import Search from './search';\r\n\r\nexport default Search;","import React from 'react';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { ISearchMapDispatchToProps, ISearchMapStateToProps } from '../../interfaces/interfaces';\r\nimport { ActionType, InitialStateType, SearchPropsType } from '../../types/types';\r\n\r\nimport actionSearchStatus from '../../actions/action-search-status';\r\nimport actionSearchValue from '../../actions/action-search-value';\r\n\r\nimport SearchField from '../search-field';\r\nimport Switch from '../common-components/switch';\r\nimport Title from '../common-components/title';\r\nimport Row from '../common-components/row';\r\n\r\nimport './search.scss';\r\n\r\nconst Search: React.FC<SearchPropsType> = (\r\n  { valuesOfSearchSwitch, searchStatus, changeSearchValue, changeSearchStatus }): React.ReactElement => {\r\n  return (\r\n    <form className='container search'>\r\n      <Row className={'mb-5'}>\r\n        <Title\r\n          renderItem={ title => (<h1 className={'top-part-title'}>{title}</h1>)}>\r\n          Find your movie\r\n        </Title>\r\n      </Row>\r\n      <Row className={'mb-4'}>\r\n        <SearchField changeSearchValue={changeSearchValue}/>\r\n      </Row>\r\n      <Switch\r\n        active={searchStatus}\r\n        title={valuesOfSearchSwitch.title}\r\n        markOfButtons={valuesOfSearchSwitch.markOfButtons}\r\n        namesOfButtons={valuesOfSearchSwitch.namesOfButtons}\r\n        transferOfActiveButtonValue={changeSearchStatus} />\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: InitialStateType): ISearchMapStateToProps => ({\r\n  searchStatus: state.searchStatus,\r\n  valuesOfSearchSwitch: state.valuesOfSearchSwitch,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ActionType>): ISearchMapDispatchToProps => {\r\n  const changeSearchStatus: (arg: string) => void = bindActionCreators(actionSearchStatus, dispatch);\r\n  const changeSearchValue: (arg: string) => void = bindActionCreators(actionSearchValue, dispatch);\r\n\r\n  return {\r\n    changeSearchStatus,\r\n    changeSearchValue\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import MoviePoster from './movie-poster';\r\n\r\nexport default MoviePoster;","import React, {useState} from 'react';\r\nimport { MoviePosterPropsType } from '../../types/types';\r\n\r\nimport './movie-poster.scss';\r\n\r\n\r\nconst MoviePoster: React.FC<MoviePosterPropsType> = ({src, className, clickHandler}): React.ReactElement => {\r\n  const [loaded, setLoaded] = useState<boolean>(false);\r\n\r\n  return (\r\n    <div className={`poster ${className}`}>\r\n      {loaded ? null :\r\n        <div\r\n          className='poster__placeholder'\r\n          onClick={clickHandler}\r\n        />\r\n      }\r\n      <img\r\n        className='poster__image'\r\n        style={loaded ? {} : {display: 'none'}}\r\n        src={src}\r\n        alt={''}\r\n        onLoad={() => setLoaded(true)}\r\n        onClick={clickHandler}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoviePoster;","import React from 'react';\r\n\r\nimport './movie-page.scss';\r\n\r\nconst MoviePageVote: React.FC<{vote: number}> = ({vote}): React.ReactElement | null => {\r\n  return (\r\n    vote ?\r\n    <p className='movie-page__rating'>{vote}</p> :\r\n    null\r\n  );\r\n};\r\n\r\nexport default MoviePageVote;","import React from 'react';\r\n\r\nimport './movie-page.scss';\r\n\r\nconst MoviePageTagline: React.FC<{tagline: string}> = ({tagline}): React.ReactElement | null => {\r\n  return (\r\n    tagline ?\r\n    <p className='movie-page__tagline'>{tagline}</p> :\r\n    null\r\n  );\r\n};\r\n\r\nexport default MoviePageTagline;","import React from 'react';\r\n\r\nimport './movie-page.scss';\r\n\r\nconst MoviePageDate: React.FC<{date: string}> = ({date}): React.ReactElement | null => {\r\n  return (\r\n    date ?\r\n    <p className='mr-4 movie-page__date'>{date.slice(0, 4)}</p> :\r\n    null\r\n  );\r\n};\r\n\r\nexport default MoviePageDate;","import React from 'react';\r\n\r\nimport './movie-page.scss';\r\n\r\nconst MoviePageRuntime: React.FC<{runtime: number}> = ({runtime}): React.ReactElement | null => {\r\n  return (\r\n    runtime ?\r\n    <p className='movie-page__runtime'>{runtime} min</p> :\r\n    null\r\n  );\r\n};\r\n\r\nexport default MoviePageRuntime;","import React from 'react';\r\n\r\nimport './movie-page.scss';\r\n\r\nconst MoviePageOverview: React.FC<{overview: string}> = ({overview}): React.ReactElement | null => {\r\n  return (\r\n    overview ?\r\n    <p className='movie-page__overview'>{overview}</p> :\r\n    null\r\n  );\r\n};\r\n\r\nexport default MoviePageOverview;","import MoviePage from './movie-page';\r\n\r\nexport default MoviePage;","import React from 'react';\r\nimport {IMoviePageData} from '../../interfaces/interfaces';\r\n\r\nimport MoviePoster from '../movie-poster';\r\nimport Title from '../common-components/title';\r\nimport MoviePageVote from './movie-page-vote';\r\nimport MoviePageTagline from './movie-page-tagline';\r\nimport MoviePageDate from './movie-page-date';\r\nimport MoviePageRuntime from './movie-page-rutime';\r\nimport MoviePageOverview from './movie-page-overview';\r\n\r\nimport './movie-page.scss';\r\n\r\nconst MoviePage: React.FC<{data: IMoviePageData}> = ({data}): React.ReactElement => {\r\n  return (\r\n    <div className='d-flex flex-row justify-content-between mt-5 mb-5 movie-page'>\r\n      <div className='mr-5'>\r\n        <MoviePoster src={data.poster_path} className={'movie-page__image'}/>\r\n      </div>\r\n      <div>\r\n        <div className='row d-flex align-items-start'>\r\n          <Title\r\n            renderItem={ title => (<h2 className='movie-page__title'>{title}</h2>)}>\r\n            {data.title}\r\n          </Title>\r\n          <MoviePageVote vote={data.vote_average}/>\r\n        </div>\r\n        <div className='row'>\r\n          <MoviePageTagline tagline={data.tagline}/>\r\n        </div>\r\n        <div className='row'>\r\n          <MoviePageDate date={data.release_date}/>\r\n          <MoviePageRuntime runtime={data.runtime}/>\r\n        </div>\r\n        <div className='row'>\r\n          <MoviePageOverview overview={data.overview}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst NotificationMessage =  styled.span`\r\n  width: 100%;\r\n  height: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n  color: #ffffff;\r\n  font-size: 2rem;\r\n`\r\n\r\nconst NotificationLabel: React.FC<{message: string}> = ({ message }): React.ReactElement => {\r\n  return <NotificationMessage>{message}</NotificationMessage>;\r\n};\r\n\r\nexport default NotificationLabel;","import NotificationLabel from './notification-label';\r\n\r\nexport default NotificationLabel;","import ErrorMessage from './error-message';\r\n\r\nexport default ErrorMessage;","import React from 'react';\r\n\r\nimport NotificationLabel from '../common-components/notification-label';\r\n\r\nconst ErrorMessage: React.FC = (): React.ReactElement => {\r\n  return (\r\n    <NotificationLabel message={'Error loading the database'}/>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;","import Loader from './loader';\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nconst Loader: React.FC = (): React.ReactElement => {\r\n  const petals: Array<React.ReactElement> = Array.from( {length: 12}, () => <div/>)\r\n\r\n  return (\r\n    <div className='spinner'>\r\n      <div className={`lds-spinner`}>\r\n        {petals}\r\n      </div>\r\n    </div>);\r\n};\r\n\r\nexport default Loader;","import MoviesApi from './movies-api';\r\n\r\nexport default MoviesApi;","export default class MoviesApi {\r\n  _apiBase = 'https://reactjs-cdp.herokuapp.com';\r\n\r\n  getMoviesData = async (url: string): Promise<{[key: string]: any}> => {\r\n    const response = await fetch(`${this._apiBase}${url}`);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Could not fetch ${this._apiBase}${url}`)\r\n    }\r\n\r\n    return await response.json();\r\n  };\r\n\r\n  getMovies = (limit: number = 21): Promise<{[key: string]: any}> => {\r\n    return this.getMoviesData(`/movies?limit=${limit}`);\r\n  };\r\n\r\n  getSpecificMovie = (id: string): Promise<{[key: string]: any}> => {\r\n    return this.getMoviesData(`/movies/${id}`);\r\n  };\r\n};","import MoviesService from './movies-service';\r\n\r\nexport default MoviesService;","import { IMovieCardData, IMovieFormAddingPropsValue } from '../../interfaces/interfaces';\r\n\r\nexport default class MoviesService {\r\n\r\n  getSearchBy = (label: string, category: string, data: Array<IMovieCardData> | null): Array<IMovieCardData> | null => {\r\n    if (data) {\r\n      return data.filter((item: {[key: string]: any}) => {\r\n        let movieData: string = this._getFormattedString(item[category]);\r\n        const searchedSubstring: string = this._getFormattedString(label);\r\n        return movieData.indexOf(searchedSubstring) > -1 ? true : false\r\n      });\r\n    }\r\n\r\n    return data;\r\n  };\r\n\r\n  getSortBy =  (data: Array<IMovieCardData> | null, parameter: string): Array<IMovieCardData> | null => {\r\n    if (data) {\r\n      return [...data].sort((a: {[key: string]: any}, b: {[key: string]: any}) => {\r\n          const firstParameter: number = a[parameter] ? this._getFormattedNumber(a, parameter) : 0;\r\n          const secondParameter: number = b[parameter] ? this._getFormattedNumber(b, parameter) : 0;\r\n          return secondParameter - firstParameter;\r\n      });\r\n    };\r\n\r\n    return data;\r\n  };\r\n\r\n  saveInLocalStorage = (data: IMovieFormAddingPropsValue, key: string = 'data'): {status: boolean} => {\r\n    const currentData: {[key: string]: any} = {...data};\r\n    const oldData: Array<object> | null = localStorage[key] ? JSON.parse(localStorage[key]) : null;\r\n\r\n    if ( !('id' in currentData) ) {\r\n      currentData.id = Date.now();\r\n    }\r\n\r\n    const newData: Array<object> = oldData ? [...oldData, currentData] : [currentData];\r\n\r\n    localStorage[key] = JSON.stringify(newData);\r\n\r\n    return {status: true}\r\n  };\r\n\r\n  getFromLocalStorage = async (key: string = 'data'): Promise<Array<any>> => {\r\n    const result: Array<any> = localStorage[key] ? JSON.parse(localStorage[key]) : [];\r\n\r\n    return await result;\r\n  };\r\n\r\n  getSpecificMovieFromLocalStorage = async (id: string): Promise<any> => {\r\n    const currentId: number = Number.parseInt(id)\r\n    const data: Array<object> = await this.getFromLocalStorage().then(result => result);\r\n\r\n    return await data.find( (item: {[key: string]: any}) => item.id === currentId);\r\n  };\r\n\r\n  private _getFormattedString(value: Array<string> | string): string {\r\n    return value instanceof Array ?\r\n      value.join(' ').toLowerCase().trim() :\r\n      value.toLowerCase().trim();\r\n  };\r\n\r\n  private _getFormattedNumber = (data: {[key: string]: any}, sortingParameter: string): number => {\r\n    return  typeof data[sortingParameter] === 'number' ?\r\n      data[sortingParameter] :\r\n      data[sortingParameter].match(/\\d/g).join('');\r\n  };\r\n};","import withData from './with-data';\r\n\r\nexport default withData;","import React, {useState, useEffect} from 'react';\r\nimport {IMovieCardData, IWithDataHOCProps} from '../../../interfaces/interfaces';\r\nimport {TResponseReturnedByAPI} from '../../../types/types';\r\n\r\nconst withData = (getData: () => TResponseReturnedByAPI, getProperty?: string) => (Wrapped: React.ComponentType<any>) => {\r\n  const Component: React.FC<IWithDataHOCProps> = (props): React.ReactElement => {\r\n    const [data, setData] = useState<Array<IMovieCardData> | IMovieCardData | null>(null);\r\n    const [updateDataStatus, setUpdateDataStatus] = useState<number | null>(null);\r\n    const [error, setError] = useState<boolean>(false);\r\n\r\n    const checksData =\r\n      (data: Array<IMovieCardData> | null, oldData: Array<IMovieCardData> | IMovieCardData | null): boolean => {\r\n      const checkingForAbsence: boolean = Boolean(data);\r\n      const checkingForEmptiness: boolean = data ? Boolean((Object.keys(data).length)) : false;\r\n      const checkingForChanges: boolean = Boolean(oldData !== data);\r\n      const verdict: boolean= checkingForAbsence && checkingForChanges && checkingForEmptiness;\r\n\r\n      return verdict;\r\n    };\r\n\r\n    const getNewData = (): void => {\r\n      getData()\r\n        .then( (data) => {\r\n          let property = getProperty ? data[getProperty] : data;\r\n\r\n          setData(property);\r\n        })\r\n        .catch( () => {\r\n          setError(true);\r\n        });\r\n    };\r\n\r\n    const addNewData = (): void => {\r\n      const checkingData = checksData(props.data, data);\r\n\r\n      if (props.data && checkingData) {\r\n        Array.isArray(data) ?\r\n          setData([...data, ...props.data]) :\r\n          setData(props.data)\r\n      }\r\n    };\r\n\r\n    const updateData = (): void => {\r\n      if (props.updateDataStatus && updateDataStatus !== props.updateDataStatus) {\r\n        setData(null);\r\n        setError(false);\r\n        setUpdateDataStatus(props.updateDataStatus);\r\n        getNewData();\r\n      }\r\n    };\r\n\r\n    useEffect(() => {getNewData()}, []);\r\n\r\n    useEffect(() => {addNewData()}, [props.data]);\r\n\r\n    useEffect(() => {updateData()}, [props.updateDataStatus]);\r\n\r\n    return <Wrapped {...props} data={data} error={error}/>;\r\n  };\r\n\r\n  return Component;\r\n};\r\n\r\nexport default withData;","import compose from './compose';\r\n\r\nexport default compose;","const compose = <T>(...funcs: Array<(arg: T) => T>) => (comp: any) => {\r\n  return funcs.reduceRight((prevResult, f) => f(prevResult), comp);\r\n};\r\n\r\nexport default compose;","import React from 'react';\r\nimport {IMoviePageControllerProps} from '../../interfaces/interfaces';\r\n\r\nimport MoviePage from '../movie-page';\r\nimport ErrorMessage from '../error-message';\r\nimport Loader from '../loader';\r\n\r\nimport MoviesApi from '../../services/movies-api';\r\nimport MoviesService from '../../services/movies-service';\r\nimport withData from '../hoc-components/with-data';\r\nimport compose from '../hoc-components/compose';\r\n\r\nconst {getSpecificMovie} = new MoviesApi();\r\nconst {getSpecificMovieFromLocalStorage} = new MoviesService();\r\n\r\nconst MoviePageController: React.FC<IMoviePageControllerProps> = ({data, error}): React.ReactElement => {\r\n  const page: React.ReactElement | null = data && !error ? <MoviePage data={data}/> : null;\r\n  const loader: React.ReactElement | null = !data && !error ? <Loader/> : null;\r\n  const errorMessage: React.ReactElement | null = error ? <ErrorMessage/> : null;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loader}\r\n      {errorMessage}\r\n      {page}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst getMovieID = () => {\r\n  return class extends React.PureComponent<{id: string}> {\r\n    render() {\r\n      const Wrapped = compose(\r\n                        withData(getSpecificMovie.bind(null, this.props.id)),\r\n                        withData(getSpecificMovieFromLocalStorage.bind(null, this.props.id)),\r\n                      )\r\n                      (MoviePageController);\r\n\r\n      return <Wrapped {...this.props}/>\r\n    };\r\n  };\r\n};\r\n\r\nexport default getMovieID();\r\n","import MoviePageController from './movie-page-controller';\r\n\r\nexport default MoviePageController;","import { MOVIES_DATA_UPDATE } from '../constants/constants';\r\nimport { IActionMoviesDataUpdate } from '../interfaces/interfaces';\r\n\r\nconst actionMoviesDataUpdate = (date: number): IActionMoviesDataUpdate => ({\r\n  type: MOVIES_DATA_UPDATE,\r\n  date: date,\r\n});\r\n\r\nexport default actionMoviesDataUpdate;","import MovieFormAdding from './movie-form-adding';\r\n\r\nexport default MovieFormAdding;","import React from 'react';\r\nimport {IMovieFormAddingProps} from '../../interfaces/interfaces';\r\n\r\nimport Title from '../common-components/title';\r\nimport Row from '../common-components/row';\r\nimport InputText from '../input-text';\r\nimport ButtonBig from '../button-big';\r\n\r\nimport './movie-form-adding.scss';\r\n\r\nconst MovieFormAdding =\r\n  React.forwardRef<HTMLInputElement, IMovieFormAddingProps>(({value, error, valuesTransmitters, valueSender}, ref) => {\r\n  const inputErrorTitle: string = error.items.includes('title') ? 'error' : '';\r\n  const inputErrorPosterPath: string = error.items.includes('poster_path') ? 'error' : '';\r\n  const inputErrorReleaseDate: string = error.items.includes('release_date') ? 'error' : '';\r\n  const inputErrorGenres: string = error.items.includes('genres') ? 'error' : '';\r\n\r\n  return (\r\n    <form className='container movie-form-adding'>\r\n      <Row className={'mb-4'}>\r\n        <Title\r\n          renderItem={ title => (<h1 className={'top-part-title'}>{title}</h1>)}>\r\n          Add your movie\r\n        </Title>\r\n      </Row>\r\n      <Row className={'fix wrap mb-4'}>\r\n        <label className=' movie-form-adding__label'>\r\n          <span>Enter the name of the movie. <br/> Input format \"Name of film\"</span>\r\n          <InputText\r\n            ref={ref}\r\n            value={value.title}\r\n            valuesTransmitter={valuesTransmitters.title}\r\n            className={inputErrorTitle}/>\r\n            <span className='movie-form-adding__error-message'>This field is filled in incorrectly.</span>\r\n        </label>\r\n        <label className=' movie-form-adding__label'>\r\n          <span>Enter the poster url of the movie. <br/> Input format \"https://image.tmdb.org/movie_poster.jpg\"</span>\r\n          <InputText\r\n            value={value.poster_path}\r\n            valuesTransmitter={valuesTransmitters.poster_path}\r\n            className={inputErrorPosterPath}/>\r\n            <span className='movie-form-adding__error-message'>This field is filled in incorrectly.</span>\r\n        </label>\r\n      </Row>\r\n      <Row className={'fix wrap'}>\r\n        <label className='movie-form-adding__label'>\r\n          <span>Enter the release date of the movie. <br/> Input format \"2020-02-02\"</span>\r\n          <InputText\r\n            value={value.release_date}\r\n            valuesTransmitter={valuesTransmitters.release_date}\r\n            className={inputErrorReleaseDate}/>\r\n            <span className='movie-form-adding__error-message'>This field is filled in incorrectly.</span>\r\n        </label>\r\n        <label className='movie-form-adding__label'>\r\n          <span>Enter the genres of the movie. <br/> Input format \"Comedy\"</span>\r\n          <InputText\r\n            value={value.genres}\r\n            valuesTransmitter={valuesTransmitters.genres}\r\n            className={inputErrorGenres}/>\r\n            <span className='movie-form-adding__error-message'>This field is filled in incorrectly.</span>\r\n        </label>\r\n        <ButtonBig\r\n          name={'Add'}\r\n          className={'align-self-end'}\r\n          clickHandler={valueSender}/>\r\n      </Row>\r\n    </form>\r\n  );\r\n});\r\n\r\nexport default MovieFormAdding;","import React, { useState, useEffect, useRef, SyntheticEvent } from 'react';\r\nimport {bindActionCreators, Dispatch} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  IMovieFormAddingControllerChangeMethods,\r\n  IMovieFormAddingControllerChecksValue, IMovieFormAddingControllerChecksValues,\r\n  IMovieFormAddingControllerMapDispatchToProps,\r\n  IMovieFormAddingControllerProps,\r\n  IMovieFormAddingPropsValue\r\n} from '../../interfaces/interfaces';\r\nimport {ActionType} from '../../types/types'\r\n\r\nimport actionMoviesDataUpdate from '../../actions/action-movies-data-update';\r\n\r\nimport MovieFormAdding from '../movie-form-adding';\r\nimport MoviesService from '../../services/movies-service';\r\n;\r\n\r\nconst {saveInLocalStorage: dataTransmitter} = new MoviesService();\r\n\r\nconst MovieFormAddingController: React.FC<IMovieFormAddingControllerProps> = (props): React.ReactElement => {\r\n  const [data, setData] = useState<IMovieFormAddingPropsValue>({\r\n    title: '',\r\n    poster_path: '',\r\n    genres: '',\r\n    release_date: ''\r\n  });\r\n  const [error, setError] = useState<IMovieFormAddingControllerChecksValues>({\r\n    status: false,\r\n    items: []\r\n  });\r\n  const inputField = useRef<HTMLInputElement>(null);\r\n\r\n  const focusInputField = (): void => {\r\n    if (inputField.current) {\r\n      inputField.current.focus()\r\n    }\r\n  };\r\n\r\n  const changeTitle = (value: string): void => {\r\n    setData( {\r\n        ...data,\r\n        title: value\r\n    });\r\n  };\r\n\r\n  const changePosterPath = (value: string): void => {\r\n    setData({\r\n        ...data,\r\n        poster_path: value\r\n    });\r\n  };\r\n\r\n  const changeGenres = (value: string): void => {\r\n    setData({\r\n        ...data,\r\n        genres: value\r\n    });\r\n  };\r\n\r\n  const changeReleaseDate = (value: string): void => {\r\n    setData({\r\n        ...data,\r\n        release_date: value\r\n    });\r\n  };\r\n\r\n  const valueSender = (evt: SyntheticEvent): void => {\r\n    evt.preventDefault();\r\n\r\n    const error: IMovieFormAddingControllerChecksValues = checksValues(\r\n      checksTitleValue(data.title),\r\n      checksPosterPathValue(data.poster_path),\r\n      checksGenresValue(data.genres),\r\n      checksReleaseDateValue(data.release_date)\r\n    );\r\n\r\n    if (!error.status) {\r\n      dataTransmitter(data);\r\n\r\n      setData({\r\n        title: '',\r\n        poster_path: '',\r\n        genres: '',\r\n        release_date: ''\r\n      });\r\n\r\n      setError({\r\n        status: false,\r\n        items: []\r\n      });\r\n\r\n      props.changeStatusDataUpdate(Date.now());\r\n    } else {\r\n      setError({...error});\r\n    }\r\n  };\r\n\r\n  const checksTitleValue = (value: string): IMovieFormAddingControllerChecksValue => {\r\n    return value.trim().length === 0 ?\r\n      {status: true,\r\n        item: 'title'} :\r\n      {status: false,\r\n        item: ''} ;\r\n  };\r\n\r\n  const checksPosterPathValue = (value: string): IMovieFormAddingControllerChecksValue => {\r\n    return value.match(/[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?\\b\\.jpg|.png$/gi) ?\r\n      {status: false,\r\n        item: ''} :\r\n      {status: true,\r\n        item: 'poster_path'};\r\n  };\r\n\r\n  const checksGenresValue = (value: string): IMovieFormAddingControllerChecksValue => {\r\n    return value.match(/^\\w+/gi) ?\r\n      {status: false,\r\n        item: ''} :\r\n      {status: true,\r\n        item: 'genres'};\r\n  };\r\n\r\n  const checksReleaseDateValue = (value: string): IMovieFormAddingControllerChecksValue => {\r\n    return value.match(/^\\d{4}-\\d{2}-\\d{2}/gi) ?\r\n      {status: false,\r\n        item: ''} :\r\n      {status: true,\r\n        item: 'release_date'};\r\n  };\r\n\r\n  const checksValues = (...values: Array<IMovieFormAddingControllerChecksValue>): IMovieFormAddingControllerChecksValues => {\r\n    return values.reduce( (acc: IMovieFormAddingControllerChecksValues, check: IMovieFormAddingControllerChecksValue) => {\r\n              if (check.status) {\r\n                acc.status = true;\r\n              }\r\n\r\n              acc.items.push(check.item);\r\n\r\n              return acc;\r\n            }, {status: false, items: []});\r\n  };\r\n\r\n  const changeMethods: IMovieFormAddingControllerChangeMethods = {\r\n    title: changeTitle,\r\n    poster_path: changePosterPath,\r\n    genres: changeGenres,\r\n    release_date: changeReleaseDate\r\n  };\r\n\r\n  useEffect(() => {focusInputField()}, []);\r\n\r\n  return (\r\n    <MovieFormAdding\r\n      ref={inputField}\r\n      value={data}\r\n      error={error}\r\n      valuesTransmitters={changeMethods}\r\n      valueSender={valueSender}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ActionType>): IMovieFormAddingControllerMapDispatchToProps => {\r\n  const changeStatusDataUpdate = bindActionCreators(actionMoviesDataUpdate, dispatch);\r\n\r\n  return {changeStatusDataUpdate};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(MovieFormAddingController);","import MovieFormAddingController from './movie-form-adding-controller';\r\n\r\nexport default MovieFormAddingController;","import TopPart from './top-part';\r\n\r\nexport default TopPart;","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport Header from '../header';\r\nimport Title from '../common-components/title';\r\nimport Search from '../search';\r\nimport MoviePageController from '../movie-page-controller';\r\nimport MovieFormAddingController from '../movie-form-adding-controller';\r\n\r\nimport './top-part.scss';\r\n\r\nconst TopPart: React.FC  = (): React.ReactElement => {\r\n  return (\r\n      <div className='container-fluid d-flex flex-column top-part'>\r\n        <div className='top-part__background'/>\r\n        <div className='pl-5 pr-5'>\r\n          <Header/>\r\n        </div>\r\n        <div className='container d-flex flex-grow-1'>\r\n          <Switch>\r\n            <Route path='/search' render={() => <Search/>}/>\r\n            <Route path='/adding' render={() => <MovieFormAddingController/>}/>\r\n            <Route path='/movie-page/:id' render={({match}) => {\r\n              const id = match.params.id\r\n              return <MoviePageController id={id}/>;\r\n            }}/>\r\n            <Route render={() => {\r\n              return (\r\n                <Title renderItem={ title => {\r\n                  return (<h1 className={'top-part-title w-100 d-flex justify-content-center align-items-center'}>{title}</h1>)\r\n                }}>\r\n                  Welcome to Netflix Roulette\r\n                </Title>\r\n              )\r\n            }}/>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default TopPart;","import { SORT_STATUS } from '../constants/constants';\r\nimport { IActionSortStatus } from '../interfaces/interfaces';\r\n\r\nconst actionSortStatus = (status: string): IActionSortStatus => ({\r\n  type: SORT_STATUS,\r\n  status: status,\r\n});\r\n\r\nexport default actionSortStatus;","import MoviesCounter from './movies-counter';\r\n\r\nexport default MoviesCounter;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {IState} from '../../interfaces/interfaces';\r\n\r\nimport './movies-counter.scss';\r\n\r\n\r\nconst MoviesCounter: React.FC<{counter: number}> = ({counter}): React.ReactElement => {\r\n  return <span className='movies-counter'>{counter} movie found</span>;\r\n};\r\n\r\nconst mapStateToProps = (state: IState): {counter: number} => {\r\n  return {\r\n    counter: state.moviesCounter\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MoviesCounter);\r\n","import ControlPanel from './control-panel';\r\n\r\nexport default ControlPanel;","import React from 'react';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  IActionSortStatus,\r\n  IControlPanelMapDispatchToProps,\r\n  IControlPanelMapStateToProps,\r\n  IControlPanelProps\r\n} from '../../interfaces/interfaces';\r\nimport { ActionType, InitialStateType } from '../../types/types';\r\n\r\nimport actionSortStatus from '../../actions/action-sort-status';\r\n\r\nimport MoviesCounter from '../movies-counter';\r\nimport Switch from '../common-components/switch';\r\nimport Row from '../common-components/row';\r\n\r\nimport './control-panel.scss';\r\n\r\nconst ControlPanel: React.FC<IControlPanelProps> =\r\n  ({ valuesOfSortSwitch, sortStatus, changeSortStatus }): React.ReactElement => {\r\n  return (\r\n    <div className='container-fluid control-panel'>\r\n      <div className='container'>\r\n        <Row className={'space align-center'}>\r\n          <MoviesCounter/>\r\n          <Switch\r\n            active={sortStatus}\r\n            title={valuesOfSortSwitch.title}\r\n            markOfButtons={valuesOfSortSwitch.markOfButtons}\r\n            namesOfButtons={valuesOfSortSwitch.namesOfButtons}\r\n            transferOfActiveButtonValue={changeSortStatus}/>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: InitialStateType): IControlPanelMapStateToProps => ({\r\n  sortStatus: state.sortStatus,\r\n  valuesOfSortSwitch: state.valuesOfSortSwitch,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ActionType>): IControlPanelMapDispatchToProps => {\r\n  const changeSortStatus: (arg: string) => void = bindActionCreators(actionSortStatus, dispatch);\r\n\r\n  return {\r\n    changeSortStatus\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlPanel);","import { MOVIES_COUNTER } from '../constants/constants';\r\nimport { IActionMoviesCounter } from '../interfaces/interfaces';\r\n\r\nconst actionMoviesCounter = (counter: number = 0): IActionMoviesCounter => ({\r\n  type: MOVIES_COUNTER ,\r\n  counter: counter\r\n});\r\n\r\n\r\n\r\nexport default actionMoviesCounter;","import { MOVIES_DATA } from '../constants/constants';\r\nimport { IActionMoviesData } from '../interfaces/interfaces';\r\n\r\nconst actionMoviesData = (data: Array<object>): IActionMoviesData => ({\r\n  type: MOVIES_DATA,\r\n  data: data,\r\n});\r\n\r\nexport default actionMoviesData;","import { MOVIES_DATA_LOADING_ERROR } from '../constants/constants';\r\nimport { IActionMoviesDataLoadingError } from '../interfaces/interfaces';\r\n\r\nconst actionMoviesDataLoadingError = (status: boolean): IActionMoviesDataLoadingError => ({\r\n  type: MOVIES_DATA_LOADING_ERROR,\r\n  status: status,\r\n});\r\n\r\nexport default actionMoviesDataLoadingError;","import actionMoviesData from './action-movies-data';\r\nimport actionMoviesDataLoadingError from './action-movies-data-loading-error';\r\nimport {IActionMoviesData, IActionMoviesDataLoadingError} from '../interfaces/interfaces';\r\nimport {TResponseReturnedByAPI} from '../types/types';\r\n\r\nconst actionMoviesServices = (getData: () => TResponseReturnedByAPI, getProperty?: string) => {\r\n  return (dispatch: (action: IActionMoviesData | IActionMoviesDataLoadingError) => void, getState: () => any) => {\r\n    getData()\r\n      .then( (data: any) => {\r\n        const {moviesData: oldData} = getState();\r\n        let property = getProperty ? data[getProperty] : data;\r\n\r\n        if (oldData) {\r\n          property = [...property, ...oldData];\r\n        }\r\n\r\n        dispatch(actionMoviesData(property));\r\n      })\r\n      .catch( () => {\r\n         dispatch(actionMoviesDataLoadingError(true));\r\n      });\r\n  }\r\n};\r\n\r\nexport default actionMoviesServices;","import { MOVIES_DATA_CLEAR } from '../constants/constants';\r\nimport { IActionMoviesDataClear } from '../interfaces/interfaces';\r\n\r\n\r\nconst actionMoviesDataClear = (): IActionMoviesDataClear => ({\r\n  type: MOVIES_DATA_CLEAR,\r\n});\r\n\r\nexport default actionMoviesDataClear;","import List from './list';\r\n\r\nexport default List;","import React from 'react';\r\n\r\nimport './list.scss';\r\n\r\nconst List: React.FC<{children: Array<React.ReactElement>}> = ( { children } ): React.ReactElement => {\r\n  const items: Array<React.ReactElement> =  React.Children.map( children,\r\n    ( (child: React.ReactElement) => {\r\n      return (\r\n        <li className='list-group-item border-0 p-0 ml-1 mr-1 mb-4 bg-transparent' key={child.props.data.id}>\r\n          {child}\r\n        </li>\r\n      )}\r\n      )\r\n  );\r\n\r\n  return (\r\n    <ul className='container d-flex flex-wrap justify-content-around list-group list-group-horizontal movies-list'>\r\n      {items}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default List;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledMovieCardReleaseDate = styled.span`\r\n  box-sizing: border-box;\r\n  padding: 0.2rem 0.8rem;\r\n  text-align: center;\r\n  border: 1px solid #555555;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst MovieCardReleaseDate: React.FC<{date: string}>  = ({date}): React.ReactElement | null  => {\r\n  const label = date ? date.slice(0, 4) : null;\r\n\r\n  return (\r\n    label ?\r\n    <StyledMovieCardReleaseDate>\r\n      {label}\r\n    </StyledMovieCardReleaseDate> :\r\n    null\r\n  );\r\n};\r\n\r\nexport default MovieCardReleaseDate;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledMovieCardGenres = styled.span`\r\n  margin-right: 1.5rem;\r\n`;\r\n\r\nconst MovieCardGenres: React.FC<{genres: string | Array<string>}>  = ({genres}): React.ReactElement | null  => {\r\n  const labels = Array.isArray(genres) ? genres.join(' ') : genres;\r\n\r\n  return (\r\n    labels ?\r\n    <StyledMovieCardGenres>\r\n      {labels}\r\n    </StyledMovieCardGenres> :\r\n    null\r\n  );\r\n};\r\n\r\nexport default MovieCardGenres;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledMovieCardRating = styled.span`\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst MovieCardRating: React.FC<{rating: number}>  = ({rating}): React.ReactElement | null  => {\r\n  return (\r\n    rating ?\r\n    <StyledMovieCardRating>\r\n      Rating: {rating}\r\n    </StyledMovieCardRating> :\r\n    null\r\n  );\r\n};\r\n\r\nexport default MovieCardRating;","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nimport './error-indicator.scss';\r\nimport countdown from './image/countdown.png';\r\n\r\nconst ErrorIndicator: React.FC = (): React.ReactElement => {\r\n  return (\r\n    <div className='error-indicator text-danger'>\r\n      <img src={countdown} alt=\"Error\"/>\r\n      <span>An error occurred.</span>\r\n      <span>The support team is already working on the fix.</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;","import ErrorBoundary from './error-boundary';\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\n\r\nimport ErrorIndicator from '../../components/error-indicator';\r\n\r\nexport default class ErrorBoundary extends Component<{children: React.ReactElement}, {hasError: boolean}> {\r\n  state = { hasError: false };\r\n\r\n  static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  };\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator/>\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n};","import MovieCard from './movie-card';\r\n\r\nexport default MovieCard;\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {RouteComponentProps} from 'react-router';\r\nimport {IMovieCardData} from '../../interfaces/interfaces';\r\n\r\nimport MoviePoster from '../movie-poster';\r\nimport Row from '../common-components/row';\r\nimport Title from '../common-components/title';\r\nimport MovieCardReleaseDate from './movie-card-release-date';\r\nimport MovieCardGenres from './movie-card-genres';\r\nimport MovieCardRating from './movie-card-rating';\r\n\r\nimport ErrorBoundary from '../../services/error-boundary';\r\n\r\nimport './movie-card.scss';\r\n\r\ntype PathParamsType = {\r\n    history: string\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & {\r\n    data: IMovieCardData\r\n}\r\n\r\nconst MovieCard: React.FC<PropsType> = ({data, history}): React.ReactElement | null  => {\r\n  if (!data) return null;\r\n\r\n  const {title, poster_path, release_date, genres, vote_average, id} = data;\r\n  const changeMovieID = (): void => {\r\n    history.push(`/movie-page/${id}`)\r\n  };\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <div className='d-flex flex-column h-100 movies-card' key={id}>\r\n        <MoviePoster\r\n          src={poster_path}\r\n          className={'mb-3 movies-card__image'}\r\n          clickHandler={changeMovieID}/>\r\n        <div className='d-flex flex-column justify-content-between flex-grow-1'>\r\n          <Row className={'space'}>\r\n            <Title\r\n              renderItem={title => (<h3 className='movie-card-title'>{title}</h3>)}>\r\n              {title}\r\n            </Title>\r\n            <MovieCardReleaseDate date={release_date}/>\r\n          </Row>\r\n          <Row className={'space movies-card__bottom-row'}>\r\n            <MovieCardGenres genres={genres}/>\r\n            <MovieCardRating rating={vote_average}/>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieCard);","import MoviesCards from './movie-cards';\r\n\r\nexport default MoviesCards;","import React from 'react';\r\nimport {IMovieCardData} from '../../interfaces/interfaces';\r\n\r\nimport List from '../common-components/list';\r\nimport MovieCard from '../movie-card';\r\n\r\nconst getMovieCards = (data: Array<IMovieCardData>): Array<React.ReactElement> => {\r\n  return data.map(el => <MovieCard data={el}/>)\r\n};\r\n\r\nconst MovieCards: React.FC<{data: Array<IMovieCardData>}> = ({data}): React.ReactElement => {\r\n  const moviesCards: Array<React.ReactElement> = getMovieCards(data);\r\n\r\n  return (\r\n    <List>\r\n      {moviesCards}\r\n    </List>\r\n  );\r\n};\r\n\r\n\r\nexport default MovieCards;","import NoFoundMessage from './no-found-message';\r\n\r\nexport default NoFoundMessage;","import React from 'react';\r\n\r\nimport NotificationLabel from '../common-components/notification-label';\r\n\r\nconst NoFoundMessage: React.FC = (): React.ReactElement => {\r\n  return (\r\n    <NotificationLabel message={'No movies found'}/>\r\n  );\r\n};\r\n\r\nexport default NoFoundMessage;"," import React, {useState, useEffect} from 'react';\r\n\r\nimport MoviesService from '../../../services/movies-service';\r\n import { IMovieCardData, IWithDataHOCProps } from '../../../interfaces/interfaces';\r\n\r\nconst {getSearchBy} = new MoviesService();\r\n\r\nconst withSearch = (Wrapped: React.ComponentType<any>) => {\r\n  const Component: React.FC<IWithDataHOCProps> = (props) => {\r\n    const [data, setData] = useState<Array<IMovieCardData> | null>(props.data);\r\n    const [searchResultForMoviesData, setSearchResultForMoviesData] = useState<Array<IMovieCardData> | null>(props.data);\r\n\r\n    const doSearch = (): void => {\r\n      const {data, searchStatus, searchValue} = props;\r\n      const searchResultForMoviesData: Array<IMovieCardData> | null = getSearchBy(searchValue, searchStatus, data);\r\n\r\n      setSearchResultForMoviesData(searchResultForMoviesData);\r\n    };\r\n\r\n    useEffect(() => {doSearch()}, [props.searchValue]);\r\n\r\n    useEffect(() => {\r\n      if (data !== props.data) {\r\n        setData(props.data);\r\n        setSearchResultForMoviesData(props.data);\r\n      }\r\n    }, [props.data]);\r\n\r\n    return <Wrapped {...props} data={searchResultForMoviesData}/>;\r\n  };\r\n\r\n  return Component;\r\n};\r\n\r\nexport default withSearch;","import withSearch from './with-search';\r\n\r\nexport default withSearch;","import React, {useState, useEffect} from 'react';\r\n\r\nimport MoviesService from '../../../services/movies-service';\r\nimport { IMovieCardData, IWithDataHOCProps } from '../../../interfaces/interfaces';\r\n\r\nconst {getSortBy} = new MoviesService();\r\n\r\nconst withSort = (Wrapped: React.ComponentType<any>) => {\r\n  const Component: React.FC<IWithDataHOCProps> = (props) => {\r\n    const [data, setData] = useState<Array<IMovieCardData> | null>(props.data);\r\n    const [sortData, setSortData] = useState<Array<IMovieCardData> | null>(null);\r\n    const [sortStatus, setSortStatus] = useState<string>(props.sortStatus);\r\n\r\n    const doSort = (): void => {\r\n      const sortData: Array<IMovieCardData> | null = getSortBy(data, sortStatus);\r\n\r\n      setSortData(sortData);\r\n    };\r\n\r\n    useEffect(() => {doSort()}, [data, sortStatus]);\r\n\r\n    useEffect(() => {setData(props.data)}, [props.data]);\r\n\r\n    useEffect(() => {setSortStatus(props.sortStatus)}, [props.sortStatus]);\r\n\r\n    return <Wrapped {...props} data={sortData}/>;\r\n  };\r\n\r\n  return Component;\r\n};\r\n\r\nexport default withSort;","import withSort from './with-sort';\r\n\r\nexport default withSort;","import React, {Component} from 'react';\r\nimport {bindActionCreators, Dispatch} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  IMovieCardsControllerMapDispatchToProps,\r\n  IMovieCardsControllerMapStateToProps,\r\n  IMovieCardsControllerProps,\r\n  IState\r\n} from '../../interfaces/interfaces';\r\nimport { ActionType, TResponseReturnedByAPI } from '../../types/types';\r\n\r\nimport actionMoviesCounter from '../../actions/action-movies-counter';\r\nimport actionMoviesServices from '../../actions/action-movies-services';\r\nimport actionMoviesDataClear from '../../actions/action-movies-data-clear';\r\n\r\nimport MovieCards from '../movie-cards';\r\nimport ErrorMessage from '../error-message';\r\nimport NoFoundMessage from '../no-found-message';\r\nimport Loader from '../loader';\r\n\r\nimport MoviesApi from '../../services/movies-api';\r\nimport MoviesService from '../../services/movies-service';\r\nimport withSearch from '../hoc-components/with-search';\r\nimport withSort from '../hoc-components/with-sort';\r\nimport compose from '../hoc-components/compose';\r\n\r\nconst {getMovies} = new MoviesApi();\r\nconst {getFromLocalStorage} = new MoviesService();\r\n\r\nclass MovieCardsController extends Component<IMovieCardsControllerProps, {}> {\r\n  getNewData() {\r\n    this.props.getData(getMovies, 'data');\r\n    this.props.getData(getFromLocalStorage);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getNewData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: IMovieCardsControllerProps) {\r\n    if (this.props.updateDataStatus !== prevProps.updateDataStatus) {\r\n      this.props.clearMoviesData();\r\n      this.getNewData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {data, error, transferNumberOfMovies} = this.props;\r\n\r\n    let cards: React.ReactElement | null = data && !error ? <MovieCards data={data}/> : null;\r\n    const loader: React.ReactElement | null = !data && !error ? <Loader/> : null;\r\n    const errorMessage: React.ReactElement | null = error ? <ErrorMessage/> : null;\r\n    const noFoundMessage: React.ReactElement | null = data && !error && data.length === 0 ? <NoFoundMessage/> : null;\r\n\r\n    data && !error ? transferNumberOfMovies(data.length) : transferNumberOfMovies(0);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {loader}\r\n        {errorMessage}\r\n        {noFoundMessage}\r\n        {cards}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state: IState): IMovieCardsControllerMapStateToProps => ({\r\n  data: state.moviesData,\r\n  error: state.moviesDataLoadingError,\r\n  updateDataStatus: state.moviesDataUpdate,\r\n  searchStatus: state.searchStatus,\r\n  searchValue: state.searchValue,\r\n  sortStatus: state.sortStatus,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ActionType>): IMovieCardsControllerMapDispatchToProps => {\r\n  const transferNumberOfMovies: (arg: number) => void = bindActionCreators(actionMoviesCounter, dispatch);\r\n  const getData: (getData: () => TResponseReturnedByAPI, getProperty?: string) => void =\r\n    bindActionCreators(actionMoviesServices, dispatch);\r\n  const clearMoviesData: () => void = bindActionCreators(actionMoviesDataClear, dispatch)\r\n\r\n  return {transferNumberOfMovies, getData, clearMoviesData};\r\n};\r\n\r\nexport default compose(\r\n                  connect(mapStateToProps, mapDispatchToProps),\r\n                  withSearch,\r\n                  withSort,\r\n                )(MovieCardsController);\r\n","import MovieCardsController from './movie-cards-controller';\r\n\r\nexport default MovieCardsController;","import Movies from './movies';\r\n\r\nexport default Movies;","import React from 'react';\r\n\r\nimport MovieCardsController from '../movie-cards-controller';\r\n\r\nimport './movies.scss';\r\n\r\nconst Movies: React.FC<object> = (props): React.ReactElement => {\r\n  return (\r\n    <div className='movies'>\r\n      <MovieCardsController {...props}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;","import Footer from './footer';\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport Logo from '../logo';\r\n\r\nimport './footer.scss';\r\n\r\nconst Footer: React.FC  = (): React.ReactElement => {\r\n  return (\r\n    <div className='d-flex justify-content-center align-items-center footer'>\r\n      <Logo />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nimport TopPart from '../top-part';\r\nimport ControlPanel from '../control-panel';\r\nimport Movies from '../movies';\r\nimport Footer from '../footer';\r\nimport ErrorBoundary from '../../services/error-boundary';\r\n\r\nimport './app.scss';\r\n\r\nconst App: React.FC = (): React.ReactElement => {\r\n  return (\r\n    <Router>\r\n      <div className='container-fluid p-0'>\r\n        <ErrorBoundary>\r\n          <TopPart/>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <ControlPanel/>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <Movies/>\r\n        </ErrorBoundary>\r\n        <Footer/>\r\n      </div>\r\n   </Router>\r\n  );\r\n};\r\n\r\nexport default App;","import store from '../store/store';\r\nimport { ActionType, InitialStateType } from '../types/types';\r\n\r\nconst initialState = store();\r\n\r\nconst reducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'MOVIES_COUNTER':\r\n      return {...state, moviesCounter: action.counter};\r\n    case 'MOVIES_DATA_UPDATE':\r\n      return {...state, moviesDataUpdate: action.date};\r\n    case 'SORT_STATUS':\r\n      return {...state, sortStatus: action.status};\r\n    case 'SEARCH_STATUS':\r\n      return {...state, searchStatus: action.status};\r\n    case 'SEARCH_VALUE':\r\n      return {...state, searchValue: action.value};\r\n    case 'MOVIES_DATA':\r\n      return {...state, moviesData: action.data};\r\n    case 'MOVIES_DATA_LOADING_ERROR':\r\n      return {...state, moviesDataLoadingError: action.status};\r\n    case 'MOVIES_DATA_CLEAR':\r\n      return {...state,  moviesData: null};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import { InitialStateType } from '../types/types';\r\n\r\nconst store = (): InitialStateType => ({\r\n  moviesData: null,\r\n  moviesDataLoadingError: false,\r\n  moviesDataUpdate: null,\r\n  moviesCounter: 0,\r\n  sortStatus: 'release_date',\r\n  searchStatus: 'title',\r\n  searchValue: '',\r\n  valuesOfSearchSwitch: {\r\n    title: 'Search by',\r\n    markOfButtons:['title', 'genres'],\r\n    namesOfButtons:['Title', 'Genres']\r\n  },\r\n  valuesOfSortSwitch: {\r\n    title: 'Sort by',\r\n    markOfButtons:['release_date', 'vote_average'],\r\n    namesOfButtons: ['Release date', 'Rating']\r\n  },\r\n});\r\n\r\nexport default store;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/app';\r\nimport reducer from './reducers/reducer';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root'));"],"sourceRoot":""}